import { useEffect } from 'react'
import gsap from 'gsap'

import { generateKey } from '~/utils'
import { Image } from '~/shared'

import s from './create.module.scss'

const Create = () => {
	const images = ['/create/1.png', '/create/2.png', '/create/3.png']
	const section = [
		{
			title: (
				<span>
					Create an
					<svg
						width='48'
						height='48'
						viewBox='0 0 48 48'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'>
						<path
							d='M37.5 4.5H10.5C9.70435 4.5 8.94129 4.81607 8.37868 5.37868C7.81607 5.94129 7.5 6.70435 7.5 7.5V40.5C7.5 41.2956 7.81607 42.0587 8.37868 42.6213C8.94129 43.1839 9.70435 43.5 10.5 43.5H37.5C38.2956 43.5 39.0587 43.1839 39.6213 42.6213C40.1839 42.0587 40.5 41.2956 40.5 40.5V7.5C40.5 6.70435 40.1839 5.94129 39.6213 5.37868C39.0587 4.81607 38.2956 4.5 37.5 4.5ZM18 9H30C30.3978 9 30.7794 9.15804 31.0607 9.43934C31.342 9.72064 31.5 10.1022 31.5 10.5C31.5 10.8978 31.342 11.2794 31.0607 11.5607C30.7794 11.842 30.3978 12 30 12H18C17.6022 12 17.2206 11.842 16.9393 11.5607C16.658 11.2794 16.5 10.8978 16.5 10.5C16.5 10.1022 16.658 9.72064 16.9393 9.43934C17.2206 9.15804 17.6022 9 18 9ZM33.9019 37.2C33.7442 37.3185 33.5648 37.4047 33.3738 37.4538C33.1828 37.5028 32.984 37.5137 32.7887 37.4859C32.5935 37.458 32.4057 37.3919 32.236 37.2914C32.0664 37.1908 31.9182 37.0579 31.8 36.9C30.8918 35.6891 29.7142 34.7063 28.3603 34.0293C27.0065 33.3524 25.5136 33 24 33C22.4864 33 20.9935 33.3524 19.6397 34.0293C18.2858 34.7063 17.1082 35.6891 16.2 36.9C16.0818 37.0576 15.9337 37.1903 15.7642 37.2907C15.5947 37.3911 15.4071 37.4571 15.2121 37.4849C15.0171 37.5128 14.8185 37.502 14.6277 37.4531C14.4369 37.4042 14.2576 37.3182 14.1 37.2C13.9424 37.0818 13.8096 36.9337 13.7093 36.7642C13.6089 36.5947 13.5429 36.4071 13.5151 36.2121C13.4872 36.0171 13.498 35.8185 13.5469 35.6277C13.5958 35.4369 13.6818 35.2576 13.8 35.1C15.1282 33.3192 16.8994 31.9171 18.9375 31.0331C17.8206 30.0134 17.0381 28.6798 16.6926 27.2074C16.3472 25.7349 16.455 24.1925 17.0019 22.7824C17.5487 21.3723 18.5091 20.1606 19.757 19.3061C21.0049 18.4516 22.482 17.9944 23.9944 17.9944C25.5068 17.9944 26.9838 18.4516 28.2317 19.3061C29.4796 20.1606 30.44 21.3723 30.9869 22.7824C31.5338 24.1925 31.6416 25.7349 31.2961 27.2074C30.9507 28.6798 30.1682 30.0134 29.0513 31.0331C31.0934 31.9155 32.8687 33.3177 34.2 35.1C34.4389 35.418 34.5417 35.8179 34.4858 36.2117C34.4299 36.6055 34.2198 36.961 33.9019 37.2ZM28.5 25.5C28.5 26.39 28.2361 27.26 27.7416 28.0001C27.2471 28.7401 26.5443 29.3169 25.7221 29.6575C24.8998 29.9981 23.995 30.0872 23.1221 29.9135C22.2492 29.7399 21.4474 29.3113 20.818 28.682C20.1887 28.0526 19.7601 27.2508 19.5865 26.3779C19.4128 25.505 19.5019 24.6002 19.8425 23.7779C20.1831 22.9557 20.7599 22.2529 21.4999 21.7584C22.24 21.2639 23.11 21 24 21C25.1935 21 26.3381 21.4741 27.182 22.318C28.0259 23.1619 28.5 24.3065 28.5 25.5Z'
							fill='#0BA5EC'
						/>
					</svg>
					Account
				</span>
			),
			desc: 'Set up an account either as an agent or business and complete your profile to enable you send and receive money.',
		},
		{
			title: (
				<span>
					Receive Business Payments{' '}
					<svg
						width='48'
						height='48'
						viewBox='0 0 48 48'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'>
						<path
							d='M37.2206 10.5169C34.9575 6.6375 31.86 4.5 28.5 4.5H19.5C16.14 4.5 13.0425 6.6375 10.7794 10.5169C8.66438 14.1413 7.5 18.9375 7.5 24C7.5 29.0625 8.66438 33.8588 10.7794 37.4831C13.0425 41.3625 16.14 43.5 19.5 43.5H28.5C31.86 43.5 34.9575 41.3625 37.2206 37.4831C39.3356 33.8588 40.5 29.0625 40.5 24C40.5 18.9375 39.3356 14.1413 37.2206 10.5169ZM37.4606 22.5H31.4606C31.3434 19.4219 30.7306 16.3829 29.6456 13.5H35.3812C36.5287 16.0088 37.2862 19.125 37.4606 22.5ZM33.5981 10.5H28.2113C27.5847 9.4131 26.8293 8.40581 25.9613 7.5H28.5C30.375 7.5 32.1375 8.625 33.5981 10.5ZM28.5 40.5H25.9669C26.8349 39.5942 27.5903 38.5869 28.2169 37.5H33.6038C32.1375 39.375 30.375 40.5 28.5 40.5ZM35.3812 34.5H29.6475C30.7324 31.6171 31.3453 28.5781 31.4625 25.5H37.4625C37.2863 28.875 36.5287 31.9912 35.3812 34.5Z'
							fill='#0BA5EC'
						/>
					</svg>
					Anywhere
				</span>
			),
			desc: 'Set up an account either as an agent or business and complete your profile to enable you send and receive money.',
		},
		{
			title: (
				<span>
					Enjoy Seamless{' '}
					<svg
						width='49'
						height='48'
						viewBox='0 0 49 48'
						fill='none'
						xmlns='http://www.w3.org/2000/svg'>
						<path
							d='M43.8897 8.31338C43.8897 8.31338 43.8897 8.33213 43.8897 8.34151L32.9772 44.3303C32.812 44.9148 32.472 45.4348 32.0028 45.8206C31.5336 46.2063 30.9576 46.4394 30.3522 46.4884C30.2659 46.4959 30.1797 46.4996 30.0934 46.4996C29.5261 46.5014 28.97 46.3408 28.4909 46.0368C28.0118 45.7328 27.6297 45.2981 27.3897 44.784L20.6941 30.6484C20.628 30.5085 20.6067 30.3517 20.6332 30.1993C20.6597 30.0469 20.7327 29.9064 20.8422 29.7971L31.5784 19.059C31.8479 18.7754 31.9959 18.3978 31.9908 18.0066C31.9858 17.6155 31.8282 17.2418 31.5516 16.9652C31.275 16.6886 30.9013 16.531 30.5102 16.526C30.119 16.521 29.7414 16.669 29.4578 16.9384L18.7047 27.6746C18.5954 27.7841 18.4549 27.8571 18.3025 27.8836C18.1501 27.9101 17.9933 27.8889 17.8534 27.8228L3.79094 21.1609C3.23864 20.9079 2.77386 20.4966 2.45543 19.9793C2.13701 19.4619 1.97927 18.8617 2.00219 18.2546C2.03273 17.6307 2.25861 17.0321 2.6479 16.5436C3.03719 16.055 3.5702 15.7012 4.17156 15.5321L40.1603 4.61963H40.1884C40.7008 4.47567 41.2423 4.47063 41.7573 4.60501C42.2723 4.73939 42.7423 5.00837 43.119 5.38434C43.4958 5.76031 43.7657 6.22974 43.9011 6.74447C44.0366 7.2592 44.0326 7.80069 43.8897 8.31338Z'
							fill='#0BA5EC'
						/>
					</svg>
					Transactions
				</span>
			),
			desc: 'Set up an account either as an agent or business and complete your profile to enable you send and receive money.',
		},
	]

	useEffect(() => {
		const arr: HTMLDivElement[] = gsap.utils.toArray('[data-animation="create-section"]')
		const images: HTMLDivElement[] = gsap.utils.toArray('[data-animation="create-image"]')

		arr.forEach((el, index) => {
			images.filter((img, idx) => {
				if (idx === index) {
					gsap.to(img, {
						scrollTrigger: {
							id: 'first',
							trigger: el,
							start: 'top 80%',
							toggleActions: 'play none none reverse',
						},
						y: 0,
						duration: 0.5,
						force3D: true,
						immediateRender: false,
					})

					gsap.to(img, {
						scrollTrigger: {
							trigger: el,
							id: 'two',
							start: 'top 0%',
							toggleActions: 'play none none reverse',
						},
						y: '100%',
						duration: 0.5,
						force3D: true,
						immediateRender: false,
					})
				}
			})
		})
	}, [])

	return (
		<div className={s.create} data-animation='create'>
			{section.map((sec, idx) => (
				<section
					data-animation='create-section'
					key={generateKey(idx, sec.desc)}
					className={s['create-section']}>
					<div className={s['create-section-div']}>move money, seamlessly!</div>
					<h1>{sec.title}</h1>
					<p data-animation='paragraphs'>{sec.desc}</p>
					<div className={s['create-section-bg']}>
						<Image src='/create/bg.png' width={1440} height={900} alt='' />
					</div>
				</section>
			))}

			<div className={s['create-images']}>
				{images.map((img, idx) => (
					<Image
						data-animation='create-image'
						src={img}
						key={generateKey(idx, img)}
						width={1266}
						height={416}
						alt=''
					/>
				))}
			</div>
		</div>
	)
}

export default Create
